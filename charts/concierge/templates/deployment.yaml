{{-  $tagVersion := printf "v%s" .Chart.AppVersion -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "concierge.fullname" . }}
  labels:
    {{- include "concierge.labels" . | nindent 4 }}
spec:
  replicas: 2
  selector:
    matchLabels:
    {{- include "concierge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "concierge.selectorLabels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "concierge.fullname" . }}
      containers:
        - name: {{ include "concierge.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default $tagVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - pinniped-concierge
            - --config=/etc/config/pinniped.yaml
            - --downward-api-path=/etc/podinfo
          ports:
            - containerPort: 8444
              protocol: TCP
              name: proxy
            - containerPort: 8443
              protocol: TCP
              name: api
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: true
            - name: impersonation-proxy
              mountPath: /var/run/secrets/impersonation-proxy.concierge.pinniped.dev/serviceaccount
              readOnly: true
          env: []
          livenessProbe:
            httpGet:
              path: /healthz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 2
            timeoutSeconds: 15
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 2
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 100Mi
        - name: config-volume
          configMap:
            name: {{ include "concierge.configMapName" . }}
        - name: impersonation-proxy
          secret:
            secretName: {{ include "concierge.impersonationProxyName" . }}
            items:
              - key: token
                path: token
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: name
                fieldRef:
                  fieldPath: metadata.name
              - path: namespace
                fieldRef:
                  fieldPath: metadata.namespace
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "concierge.configMapName" . }}
  labels:
    {{- include "concierge.labels" . | nindent 4 }}
data:
  pinniped.yaml: |
    discovery:
      url: null
    api:
      servingCertificate:
        durationSeconds: 2592000
        renewBeforeSeconds: 2160000
    apiGroupSuffix: pinniped.dev
    names:
      servingCertificateSecret: {{ include "concierge.servingCertificateSecretName" . }}
      credentialIssuer: {{ include "concierge.credentialIssuerName" . }}
      apiService: {{ include "concierge.apiServiceName" . }}
      impersonationLoadBalancerService: {{ include "concierge.impersonationLoadBalancerServiceName" . }}
      impersonationClusterIPService: {{ include "concierge.impersonationClusterIPServiceName" . }}
      impersonationTLSCertificateSecret: {{ include "concierge.impersonationTLSCertificateSecretName" . }}
      impersonationCACertificateSecret: {{ include "concierge.impersonationCACertificateSecretName" . }}
      impersonationSignerSecret: {{ include "concierge.impersonationSignerSecretName" . }}
      agentServiceAccount: {{ include "concierge.kubeCertAgentName" . }}
    labels:
      {{- include "concierge.labels" . | nindent 6 }}
    kubeCertAgent:
      namePrefix: "{{ include "concierge.agentPrefixName" . }}"
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default $tagVersion }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "concierge.impersonationProxyName" . }}
  labels:
    {{- include "concierge.labels" . | nindent 4 }}
  annotations:
    kapp.k14s.io/change-rule: upsert after upserting impersonation-proxy.concierge.pinniped.dev/serviceaccount
    kubernetes.io/service-account.name: {{ include "concierge.impersonateServiceAccountName" . }}
type: kubernetes.io/service-account-token
---
apiVersion: config.concierge.pinniped.dev/v1alpha1
kind: CredentialIssuer
metadata:
  name: {{ include "concierge.credentialIssuerName" . }}
  labels:
    {{- include "concierge.labels" . | nindent 4 }}
spec:
  impersonationProxy:
    mode: auto
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
